//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/HighVoltage/Scripts/Infrastructure/Controls/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Editing"",
            ""id"": ""44b9159a-8313-46a5-9313-16c01037a141"",
            ""actions"": [
                {
                    ""name"": ""EditingActionMain"",
                    ""type"": ""Button"",
                    ""id"": ""5e859b1f-86c8-4e1c-83d4-fda8822153ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EditingActionSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""7630c571-1d83-4c37-b0eb-67c9c4771e9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchEditingMode"",
                    ""type"": ""Button"",
                    ""id"": ""94e7ff7c-74f8-4782-ab6d-0a8890406d8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8847d62f-eb7b-4a1f-8e72-cd9d0cc06e41"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""22eedf2d-599e-44b7-8fc3-f31708389410"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""415034d6-6d73-45eb-973b-fa5b540efab0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b84fbe50-e548-46fa-9bb1-d6b016a5ba93"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EditingActionMain"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa771239-d464-4e1c-908a-c9305d2e9465"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EditingActionSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d0c6d80-9338-4184-8979-b468e855d0d4"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchEditingMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f81846df-a9a1-4b58-8182-0905cd166f2f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchEditingMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""059b7260-4516-40e4-8299-5d4a0c563be8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchEditingMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1f12d95-359e-4742-b699-c49b19b17ade"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28a7f0f4-d63b-44b1-b329-55279b2f6458"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""55b46cb5-5b21-417f-a9fc-0f0cb2667bed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""639201a1-fd6f-4e30-8f80-868c728fce3a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""995bdfd2-7587-42ca-920c-5623dde780c1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""656f1822-9f38-48ee-8e36-3b4a61fd95c2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7bce486d-26e4-43b4-971e-e58e8db6b4c6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Editing
        m_Editing = asset.FindActionMap("Editing", throwIfNotFound: true);
        m_Editing_EditingActionMain = m_Editing.FindAction("EditingActionMain", throwIfNotFound: true);
        m_Editing_EditingActionSecondary = m_Editing.FindAction("EditingActionSecondary", throwIfNotFound: true);
        m_Editing_SwitchEditingMode = m_Editing.FindAction("SwitchEditingMode", throwIfNotFound: true);
        m_Editing_Cursor = m_Editing.FindAction("Cursor", throwIfNotFound: true);
        m_Editing_OpenPauseMenu = m_Editing.FindAction("OpenPauseMenu", throwIfNotFound: true);
        m_Editing_MoveCamera = m_Editing.FindAction("MoveCamera", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Editing
    private readonly InputActionMap m_Editing;
    private List<IEditingActions> m_EditingActionsCallbackInterfaces = new List<IEditingActions>();
    private readonly InputAction m_Editing_EditingActionMain;
    private readonly InputAction m_Editing_EditingActionSecondary;
    private readonly InputAction m_Editing_SwitchEditingMode;
    private readonly InputAction m_Editing_Cursor;
    private readonly InputAction m_Editing_OpenPauseMenu;
    private readonly InputAction m_Editing_MoveCamera;
    public struct EditingActions
    {
        private @PlayerInput m_Wrapper;
        public EditingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @EditingActionMain => m_Wrapper.m_Editing_EditingActionMain;
        public InputAction @EditingActionSecondary => m_Wrapper.m_Editing_EditingActionSecondary;
        public InputAction @SwitchEditingMode => m_Wrapper.m_Editing_SwitchEditingMode;
        public InputAction @Cursor => m_Wrapper.m_Editing_Cursor;
        public InputAction @OpenPauseMenu => m_Wrapper.m_Editing_OpenPauseMenu;
        public InputAction @MoveCamera => m_Wrapper.m_Editing_MoveCamera;
        public InputActionMap Get() { return m_Wrapper.m_Editing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EditingActions set) { return set.Get(); }
        public void AddCallbacks(IEditingActions instance)
        {
            if (instance == null || m_Wrapper.m_EditingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_EditingActionsCallbackInterfaces.Add(instance);
            @EditingActionMain.started += instance.OnEditingActionMain;
            @EditingActionMain.performed += instance.OnEditingActionMain;
            @EditingActionMain.canceled += instance.OnEditingActionMain;
            @EditingActionSecondary.started += instance.OnEditingActionSecondary;
            @EditingActionSecondary.performed += instance.OnEditingActionSecondary;
            @EditingActionSecondary.canceled += instance.OnEditingActionSecondary;
            @SwitchEditingMode.started += instance.OnSwitchEditingMode;
            @SwitchEditingMode.performed += instance.OnSwitchEditingMode;
            @SwitchEditingMode.canceled += instance.OnSwitchEditingMode;
            @Cursor.started += instance.OnCursor;
            @Cursor.performed += instance.OnCursor;
            @Cursor.canceled += instance.OnCursor;
            @OpenPauseMenu.started += instance.OnOpenPauseMenu;
            @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
            @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
            @MoveCamera.started += instance.OnMoveCamera;
            @MoveCamera.performed += instance.OnMoveCamera;
            @MoveCamera.canceled += instance.OnMoveCamera;
        }

        private void UnregisterCallbacks(IEditingActions instance)
        {
            @EditingActionMain.started -= instance.OnEditingActionMain;
            @EditingActionMain.performed -= instance.OnEditingActionMain;
            @EditingActionMain.canceled -= instance.OnEditingActionMain;
            @EditingActionSecondary.started -= instance.OnEditingActionSecondary;
            @EditingActionSecondary.performed -= instance.OnEditingActionSecondary;
            @EditingActionSecondary.canceled -= instance.OnEditingActionSecondary;
            @SwitchEditingMode.started -= instance.OnSwitchEditingMode;
            @SwitchEditingMode.performed -= instance.OnSwitchEditingMode;
            @SwitchEditingMode.canceled -= instance.OnSwitchEditingMode;
            @Cursor.started -= instance.OnCursor;
            @Cursor.performed -= instance.OnCursor;
            @Cursor.canceled -= instance.OnCursor;
            @OpenPauseMenu.started -= instance.OnOpenPauseMenu;
            @OpenPauseMenu.performed -= instance.OnOpenPauseMenu;
            @OpenPauseMenu.canceled -= instance.OnOpenPauseMenu;
            @MoveCamera.started -= instance.OnMoveCamera;
            @MoveCamera.performed -= instance.OnMoveCamera;
            @MoveCamera.canceled -= instance.OnMoveCamera;
        }

        public void RemoveCallbacks(IEditingActions instance)
        {
            if (m_Wrapper.m_EditingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEditingActions instance)
        {
            foreach (var item in m_Wrapper.m_EditingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_EditingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public EditingActions @Editing => new EditingActions(this);
    public interface IEditingActions
    {
        void OnEditingActionMain(InputAction.CallbackContext context);
        void OnEditingActionSecondary(InputAction.CallbackContext context);
        void OnSwitchEditingMode(InputAction.CallbackContext context);
        void OnCursor(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
        void OnMoveCamera(InputAction.CallbackContext context);
    }
}
